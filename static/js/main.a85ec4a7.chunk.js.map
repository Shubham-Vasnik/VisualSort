{"version":3,"sources":["SortingAlgorithms/SortingAlgorithms.js","Components/NavBar.js","Components/RenderArray.js","SortingAlgorithms/AlgorithmsInfo.js","Components/Info.js","Components/Visualizer.js","Components/About.js","Components/App.js","index.js"],"names":["swap","arr","indx1","indx2","arrayBar","document","getElementsByClassName","temp","barOne","style","barTwo","backgroundColor","height","sleep","milliseconds","Promise","resolve","setTimeout","bubbleSort","delay","a","i","length","noSwaps","j","k","selectionSort","min","insertionSort","currentVal","merge","start","mid","end","arr2","mergeSort","Math","floor","all","console","log","partition","pivot","pivotIndx","quickSort","getDigit","num","abs","mostDigits","nums","maxDigits","max","log10","radixSort","colors","maxDigitCount","digitBuckets","Array","from","trackColor","digit","push","concat","NavBar","setAlgorithm","resetInfo","className","id","href","onClick","e","preventDefault","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","aria-labelledby","RenderArray","array","arrayWidth","window","innerWidth","renderedArray","map","value","index","key","width","AlgorithmsInfo","main","moreInfo","best","average","worst","Info","props","radix","algorithm","radixBox","MAX","Number","innerHeight","Visualizer","state","size","randomArray","round","random","genRandomArray","setState","componentDidMount","setSlider","onInputChange","event","target","setArraySize","rangeColor","getElementById","background","onSliderChange","btnDisable","disabled","btnEnable","startAlgorithm","runningAlgo","slice","endd","getInfo","setInfo","this","info","htmlFor","onChange","placeholder","slider-step","React","Component","About","App","selectedAlgorithm","reserInfo","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.a85ec4a7.chunk.js","sourcesContent":["function swap(arr,indx1,indx2){\r\n    var arrayBar=document.getElementsByClassName(\"array-bar\");\r\n    let temp = arr[indx1];\r\n    arr[indx1] = arr[indx2];\r\n    arr[indx2] = temp;\r\n    let barOne = arrayBar[indx1].style;\r\n    let barTwo = arrayBar[indx2].style;\r\n    barOne.backgroundColor=\"orange\";\r\n    barTwo.backgroundColor=\"orange\";\r\n    barOne.height = `${arr[indx1]}px`;\r\n    barTwo.height = `${arr[indx2]}px`\r\n}\r\n\r\nconst sleep = milliseconds => {\r\n    return new Promise(resolve => setTimeout(resolve, milliseconds));\r\n  };\r\n\r\n\r\n const bubbleSort = async (arr,delay) => {\r\n    var arrayBar=document.getElementsByClassName(\"array-bar\");\r\n    let noSwaps;\r\n    for(var i = arr.length;i>0;i--){\r\n        noSwaps=true;\r\n        for(var j = 0;j<i-1;j++){\r\n            arrayBar[j].style.backgroundColor=\"red\";\r\n            arrayBar[j+1].style.backgroundColor=\"red\";\r\n           await sleep(delay);\r\n            arrayBar[j].style.backgroundColor=\"#292b2c\";\r\n            arrayBar[j+1].style.backgroundColor=\"#292b2c\";\r\n            if(arr[j]>arr[j+1]){\r\n                noSwaps=false;\r\n                swap(arr,j,j+1);\r\n                await sleep(delay);\r\n                arrayBar[j].style.backgroundColor=\"#292b2c\";\r\n                arrayBar[j+1].style.backgroundColor=\"#292b2c\";\r\n            }\r\n        }\r\n        if(noSwaps){\r\n            for(var k = 0;k<arrayBar.length;k++){\r\n                arrayBar[k].style.backgroundColor=\"green\";\r\n            }\r\n            break;\r\n        }\r\n        arrayBar[i-1].style.backgroundColor=\"green\";\r\n    }\r\n    return arr;\r\n}\r\n\r\nconst selectionSort = async(arr,delay) => {\r\n    var arrayBar=document.getElementsByClassName(\"array-bar\");\r\n    for(var i=0;i<arr.length;i++){\r\n        var min=i;\r\n        for(var j=i+1;j<arr.length;j++){\r\n            arrayBar[min].style.backgroundColor=\"red\";\r\n            arrayBar[j].style.backgroundColor=\"red\";\r\n           await sleep(delay);\r\n            arrayBar[min].style.backgroundColor=\"#292b2c\";\r\n            arrayBar[j].style.backgroundColor=\"#292b2c\";\r\n            if(arr[j]<arr[min]){\r\n                min=j;\r\n            }\r\n        }\r\n        if(i !== min){\r\n            swap(arr,i,min);\r\n        }\r\n        arrayBar[i].style.backgroundColor=\"green\";\r\n    }\r\n    \r\n    return arr;\r\n};\r\n\r\nconst insertionSort = async (arr,delay) =>{\r\n    var arrayBar=document.getElementsByClassName(\"array-bar\");\r\n    for(var i = 1;i<arr.length;i++){\r\n        arrayBar[i].style.backgroundColor=\"red\";\r\n        var currentVal=arr[i];\r\n        for(var j = i-1;j>=0 && arr[j]>currentVal;j--){\r\n            arrayBar[j].style.backgroundColor=\"orange\";\r\n            await sleep(delay);\r\n            arr[j+1] = arr[j];\r\n            arrayBar[j+1].style.height = `${arr[j+1]}px`;\r\n            arrayBar[j].style.backgroundColor=\"#292b2c\";\r\n        }\r\n        arrayBar[j+1].style.height = `${currentVal}px`;\r\n        arr[j+1] = currentVal;\r\n    }\r\n    for( var k = 0;k<arrayBar.length;k++){\r\n        arrayBar[k].style.backgroundColor=\"green\";\r\n    }\r\n    return arr;\r\n}\r\n\r\n\r\n\r\nconst merge = async (arr,start,mid,end,arr2,delay) => {\r\n    var arrayBar=document.getElementsByClassName(\"array-bar\");\r\n    let k = start;\r\n    let i = start;\r\n    let j = mid +1;\r\n    while(i<=mid && j<=end){\r\n        \r\n        arrayBar[i].style.backgroundColor='red';\r\n        arrayBar[j].style.backgroundColor='red';\r\n        await sleep(delay);\r\n        arrayBar[i].style.backgroundColor='#292b2c';\r\n        arrayBar[j].style.backgroundColor='#292b2c';\r\n\r\n        if(arr2[i]<=arr2[j]){\r\n            arrayBar[k].style.height=`${arr2[i]}px`;\r\n            arr[k++]=arr2[i++];\r\n            \r\n        }\r\n        else{\r\n            arrayBar[k].style.height=`${arr2[j]}px`;\r\n            arr[k++]=arr2[j++];\r\n        }\r\n    }\r\n    while(i<=mid){\r\n        arrayBar[i].style.backgroundColor='red';\r\n        await sleep(delay);\r\n        arrayBar[i].style.backgroundColor='#292b2c';\r\n        arrayBar[k].style.height=`${arr2[i]}px`;\r\n        arr[k++] = arr2[i++];\r\n        \r\n    }\r\n    while(j<=end){\r\n        arrayBar[j].style.backgroundColor='red';\r\n        await sleep(delay);\r\n        arrayBar[j].style.backgroundColor='#292b2c';\r\n        arrayBar[k].style.height=`${arr2[j]}px`;\r\n        arr[k++] = arr2[j++];\r\n        \r\n    }\r\n}\r\n\r\nconst mergeSort = async (arr,start,end,arr2,delay) => {\r\n    if(start===end){\r\n        return;\r\n    }\r\n    const mid = Math.floor((start+end)/2);\r\n    await Promise.all([mergeSort(arr2,start,mid,arr,delay),mergeSort(arr2,mid+1,end,arr,delay)]);\r\n    await merge(arr,start,mid,end,arr2,delay);\r\n    console.log(arr);\r\n\r\n    var arrayBar=document.getElementsByClassName(\"array-bar\");\r\n    for(var i = 0;i<arr.length;i++){\r\n        if(arr[i]<=arr[i+1]){\r\n            arrayBar[i].style.backgroundColor=\"green\";\r\n        }\r\n    }\r\n    arrayBar[arr.length-1].style.backgroundColor=\"green\";\r\n}\r\n\r\n\r\nconst partition = async (arr,start,end,delay) =>{\r\n    var arrayBar=document.getElementsByClassName(\"array-bar\");\r\n    let pivot = arr[start];\r\n    let pivotIndx = start;\r\n    for(var i = start + 1;i <= end;i++){\r\n        arrayBar[i].style.backgroundColor='red';\r\n        arrayBar[pivotIndx].style.backgroundColor='red';\r\n        if(pivot>arr[i]){\r\n            pivotIndx++;\r\n            swap(arr,i,pivotIndx);\r\n        }\r\n        await sleep(delay+2);\r\n        arrayBar[i].style.backgroundColor='#292b2c';\r\n        arrayBar[pivotIndx].style.backgroundColor='#292b2c';  \r\n    }\r\n    swap(arr,start,pivotIndx);\r\n    arrayBar[start].style.backgroundColor='#292b2c';\r\n    arrayBar[pivotIndx].style.backgroundColor='green';\r\n//     console.log(arr);\r\n    return pivotIndx;\r\n}\r\n\r\nconst quickSort = async (arr,start,end,delay) =>{\r\n    if(start>end){\r\n        return;\r\n    }\r\n    var pivot = await partition(arr,start,end,delay);\r\n    await Promise.all(\r\n        [\r\n            quickSort(arr,start,pivot-1,delay),\r\n            quickSort(arr,pivot+1,end,delay)\r\n        ]\r\n    );\r\n    \r\n\r\n    return arr;\r\n}\r\n\r\nconst getDigit = (num,i) =>{\r\n    return Math.floor((Math.abs(num)/10**i)%10);\r\n}\r\n\r\nconst digitCount = (num) =>{\r\n    if(num===0) return 1;\r\n    return Math.floor(Math.log10(Math.abs(num))) + 1;\r\n}\r\n\r\nconst mostDigits = (nums) => {\r\n    let maxDigits = 0;\r\n    for(let i = 0;i<nums.length;i++){\r\n        maxDigits = Math.max(maxDigits,digitCount(nums[i]));\r\n    }\r\n    return maxDigits;\r\n}\r\n\r\nconst  radixSort = async (arr,delay) =>{\r\n    const colors = ['#FFFF00','#808000','#00FFFF','#008080','#0000FF','#000080','#FF00FF','#800080','#800000','#00FF00'];\r\n    let arrayBar=document.getElementsByClassName(\"array-bar\");\r\n    let maxDigitCount = mostDigits(arr);\r\n    for(let i = 0;i<maxDigitCount;i++){\r\n       let digitBuckets = Array.from({length:10},() => []);\r\n       let trackColor = {}\r\n       for(let j = 0;j<arr.length;j++){\r\n           let digit = getDigit(arr[j],i);\r\n           digitBuckets[digit].push(arr[j]);\r\n           arrayBar[j].style.backgroundColor=colors[digit];\r\n           trackColor[arr[j]] = digit;\r\n           await sleep(delay);\r\n       }\r\n       arr = [].concat(...digitBuckets);\r\n       \r\n       for(let k = 0;k<arrayBar.length;k++){\r\n           arrayBar[k].style.height=`${arr[k]}px`;\r\n           arrayBar[k].style.backgroundColor = colors[trackColor[arr[k]]];\r\n       }\r\n       await sleep(delay * 100);\r\n       for(let k = 0;k<arrayBar.length;k++){\r\n        arrayBar[k].style.backgroundColor='#292b2c';\r\n    }\r\n    }\r\n    for(let k = 0;k<arrayBar.length;k++){\r\n        arrayBar[k].style.backgroundColor=\"green\";\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport  {bubbleSort,selectionSort,insertionSort,mergeSort,quickSort,radixSort};","import React from 'react';\r\nimport '../SortingAlgorithms/SortingAlgorithms'\r\n\r\n\r\nconst NavBar = ({setAlgorithm,resetInfo}) =>{\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <a className=\"navbar-brand\" id=\"Brand\" href=\"#Visual Sort\" onClick={(e) => {e.preventDefault();setAlgorithm(\"Visual Sort\")}}>Visual Sort</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                  <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n              \r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                  <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                      <a className=\"nav-link\" href=\"#Bubble Sort\" onClick={(e) => {e.preventDefault();setAlgorithm(\"Bubble Sort\");resetInfo()}}>Bubble Sort</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#Merge Sort\" onClick={(e) => {e.preventDefault();setAlgorithm(\"Merge Sort\");resetInfo()}}>Merge Sort</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#Quick Sort\" onClick={(e) => {e.preventDefault();setAlgorithm(\"Quick Sort\");resetInfo()}}>Quick Sort</a>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                      <a className=\"nav-link dropdown-toggle\" href=\"#More Sorts\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        More Sorts\r\n                      </a>\r\n                      <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                        <a className=\"dropdown-item\" href=\"#Selection Sort\" onClick={(e) => {e.preventDefault();setAlgorithm(\"Selection Sort\");resetInfo()}}>Selection Sort</a>\r\n                        <a className=\"dropdown-item\" href=\"#Insertion Sort\" onClick={(e) => {e.preventDefault();setAlgorithm(\"Insertion Sort\");resetInfo()}}>Insertion Sort</a>\r\n                        <a className=\"dropdown-item\" href=\"#Radix Sort\" onClick={(e) => {e.preventDefault();setAlgorithm(\"Radix Sort\");resetInfo()}}>Radix Sort</a>\r\n                        <div className=\"dropdown-divider\"></div>\r\n                        <a className=\"dropdown-item\"  href=\"#Visual Sort\" onClick={(e) => {e.preventDefault();setAlgorithm(\"Visual Sort\");resetInfo()}}>About</a>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </nav>\r\n    );\r\n} \r\n\r\nexport default NavBar;","import React from 'react';\r\nimport './stylesheets/renderArray.css';\r\n\r\nconst DEFAULT_COLOR = '#292b2c';\r\n\r\n\r\nconst RenderArray = ({array}) =>{\r\n    const arrayWidth = Math.floor(window.innerWidth / (array.length * 3));\r\n    const renderedArray = array.map( (value,index) => {\r\n        return (\r\n            <div className=\"array-bar\" key={index} style={{\r\n                backgroundColor: DEFAULT_COLOR,\r\n                height: `${value}px`,\r\n                width: `${arrayWidth}px`\r\n              }} >\r\n            </div>\r\n        );\r\n    })\r\n    return (\r\n        <div className=\"array-container\">\r\n            {renderedArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RenderArray;","const AlgorithmsInfo = { \r\n       \r\n\"Merge Sort\" : {\r\n    main:' Merge Sort is a Divide and Conquer algorithm. It divides input array in two halves, calls itself for the two halves and then merges the two sorted halves. The merge() function is used for merging two halves. The merge(arr, l, m, r) is key process that assumes that arr[l..m] and arr[m+1..r] are sorted and merges the two sorted sub-arrays into one',\r\n    moreInfo:'https://en.wikipedia.org/wiki/Merge_sort',\r\n    best:'Ω(n log(n))',\r\n    average:'θ(n log(n))',\r\n    worst:'O(n log(n))'\r\n},\r\n\r\n \"Quick Sort\" : {\r\n    main:'QuickSort is a Divide and Conquer algorithm. It picks an element as pivot and partitions the given array around the picked pivot. The key process in quickSort is partition(). Target of partitions is, given an array and an element x of array as pivot, put x at its correct position in sorted array and put all smaller elements (smaller than x) before x, and put all greater elements (greater than x) after x. All this should be done in linear time.',\r\n    moreInfo:'https://en.wikipedia.org/wiki/Quicksort',\r\n    best:'Ω(n log(n))',\r\n    average:'θ(n log(n))',\r\n    worst:'O(n^2)'\r\n},\r\n\r\n\"Selection Sort\" : {\r\n    main:'The selection sort algorithm sorts an array by repeatedly finding the minimum element (considering ascending order) from unsorted part and putting it at the beginning. The algorithm maintains two subarrays in a given array .1) The subarray which is already sorted.2) Remaining subarray which is unsorted.In every iteration of selection sort, the minimum element (considering ascending order) from the unsorted subarray is picked and moved to the sorted subarray.',\r\n    moreInfo:'https://en.wikipedia.org/wiki/Selection_sort',\r\n    best:'Ω(n^2)',\r\n    average:'θ(n^2)',\r\n    worst:'O(n^2)'\r\n},\r\n\r\n\"Bubble Sort\" : {\r\n    main:'Bubble Sort is the simplest sorting algorithm that works by repeatedly swapping the adjacent elements if they are in wrong order.',\r\n    moreInfo:'https://en.wikipedia.org/wiki/Bubble_sort',\r\n    best:'Ω(n)',\r\n    average:'θ(n^2)',\r\n    worst:'O(n^2)'\r\n},\r\n\r\n\"Insertion Sort\" : {\r\n    main:'Insertion sort is a simple sorting algorithm that works the way we sort playing cards in our hands. Insertion sort is a simple sorting algorithm that builds the final sorted array (or list) one item at a time.',\r\n    moreInfo:'https://en.wikipedia.org/wiki/Insertion_sort',\r\n    best:'Ω(n)',\r\n    average:'θ(n^2)',\r\n    worst:'O(n^2)'\r\n},\r\n\r\n\"Radix Sort\" : {\r\n    main:'Radix sort is a non-comparative sorting algorithm. It avoids comparison by creating and distributing elements into buckets according to their radix. The idea of Radix Sort is to do digit by digit sort starting from least significant digit to most significant digit. Radix sort uses counting sort as a subroutine to sort.',\r\n    moreInfo:'https://en.wikipedia.org/wiki/Radix_sort',\r\n    best:'Ω(nk)',\r\n    average:'θ(nk)',\r\n    worst:'O(nk)'\r\n},\r\n\r\n}\r\n\r\nexport {AlgorithmsInfo};","import React from 'react';\r\nimport './stylesheets/info.css';\r\nimport {AlgorithmsInfo} from '../SortingAlgorithms/AlgorithmsInfo';\r\nconst Info = (props) => {\r\n    \r\n    var radix = false;\r\n    if(props.algorithm === \"Radix Sort\"){\r\n        radix = true;\r\n    }\r\n\r\n    const colors = ['#FFFF00','#808000','#00FFFF','#008080','#0000FF','#000080','#FF00FF','#800080','#800000','#00FF00'];\r\n    var radixBox =  colors.map( (value,index) => {\r\n       \r\n        return ( <div className=\"box\" key={index}><div style={{\r\n            backgroundColor: value}}></div> <span className='boxname'>{`Elements With ${index} in the current position`}</span></div> )\r\n\r\n        })\r\n\r\n    return (\r\n    <div>\r\n        <div className=\"jumbotron\">\r\n                    <h1 className=\"display-4\">{props.algorithm}</h1>\r\n                    <hr className=\"my-4\"/>\r\n                    {\r\n                        radix \r\n                        ?( \r\n                         <div className=\"radixboxes\">\r\n                            {radixBox}\r\n                         </div>  \r\n                        )\r\n                        :(\r\n                        <div className=\"boxes\">\r\n                                <div className=\"box\"><div className=\"sorted\"></div> <span className='boxname'>Sorted Elements</span></div> \r\n                                <div className=\"box\"><div className=\"compare\"></div> <span className='boxname'>Elements Which Are Being Compared</span></div>\r\n                                <div className=\"box\"><div className=\"swap\"></div> <span className='boxname'>Elements Which Are Being Swaped</span></div>\r\n                                <div className=\"box\"><div className=\"unsorted\"></div> <span className='boxname'>Unsorted Elements</span></div>\r\n                            </div>\r\n                            )\r\n                    }\r\n                    \r\n                    <div className=\"info\">\r\n                        <p>\r\n                        {AlgorithmsInfo[props.algorithm].main}\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className=\"float-right\">\r\n                            <a className=\"btn btn-dark\" href={AlgorithmsInfo[props.algorithm].moreInfo}>More Info</a>\r\n                        </div>\r\n                    </div>\r\n        </div>\r\n\r\n        <div className=\"timecom\">\r\n            <h2>Time Complexity</h2>\r\n            <div> <h4>Best Case</h4> = <h5>{AlgorithmsInfo[props.algorithm].best}</h5></div>\r\n            <div> <h4>Average Case</h4> = <h5>{AlgorithmsInfo[props.algorithm].average}</h5></div>\r\n            <div> <h4>Worst</h4> = <h5>{AlgorithmsInfo[props.algorithm].worst}</h5></div>\r\n        </div>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Info;","import './stylesheets/visualizer.css'\r\nimport React from 'react';\r\nimport RenderArray from './RenderArray';\r\nimport Info from './Info';\r\nimport {bubbleSort,selectionSort,insertionSort,mergeSort, quickSort, radixSort} from '../SortingAlgorithms/SortingAlgorithms';\r\n\r\nconst MAX = Number(window.innerHeight)-150;\r\nconst LENGHT = 300;\r\n\r\n\r\nclass Visualizer extends React.Component{\r\n\r\n    state = { array: [1,2,3], size:250,delay:3,};\r\n\r\n    randomArray = (length, max) =>\r\n        [...new Array(length)].map(() => Math.round(Math.random() * max));\r\n    \r\n    genRandomArray = (length = LENGHT) => {\r\n        this.setState({ array : this.randomArray(length,MAX) });\r\n    }    \r\n\r\n\r\n    componentDidMount = () =>{\r\n        this.genRandomArray(this.state.size);\r\n        this.setSlider();\r\n    }\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({size:event.target.value});\r\n    }\r\n\r\n    setArraySize = (event) =>{\r\n        event.preventDefault();\r\n        this.genRandomArray(Number(this.state.size));\r\n        let arrayBar = document.getElementsByClassName(\"array-bar\");\r\n        for(var i =0 ;i<arrayBar.length;i++){\r\n            arrayBar[i].style.backgroundColor=\"#292b2c\";\r\n        }\r\n    }\r\n\r\n    setSlider = () =>{\r\n        let value =((303-this.state.delay)*100)/300 + 3;\r\n        let rangeColor=`linear-gradient(90deg,#292b2c ${value}%,  #ffffff ${value}%)`;\r\n        document.getElementById('delay').style.background = rangeColor;\r\n    }\r\n\r\n    onSliderChange = (event) =>{\r\n        let delay=303-event.target.value;\r\n        this.setState({delay:delay});\r\n        this.setSlider();\r\n    }\r\n\r\n    btnDisable = () => {\r\n        document.getElementById('select').disabled=true;\r\n        document.getElementById('reset').disabled=true;\r\n        document.getElementById('start').disabled=true;\r\n        document.getElementById('delay').disabled=true;\r\n    }\r\n    btnEnable = () => {\r\n        document.getElementById('select').disabled=false;\r\n        document.getElementById('reset').disabled=false;\r\n        document.getElementById('start').disabled=false;\r\n        document.getElementById('delay').disabled=false;\r\n    }\r\n   \r\n\r\n    startAlgorithm = async (event) => {\r\n        event.preventDefault();\r\n        this.btnDisable()\r\n        switch(this.props.algorithm){\r\n            case \"Bubble Sort\":\r\n                console.log(\"Bubble Sort\");\r\n                this.setState({runningAlgo:this.props.algorithm})\r\n                await bubbleSort(this.state.array,this.state.delay);\r\n                this.btnEnable();\r\n                break;\r\n            case \"Merge Sort\":\r\n                console.log(\"Merge Sort\");\r\n                let arr2 = this.state.array.slice();\r\n                let end =this.state.array.length-1;\r\n                await mergeSort(this.state.array,0,end,arr2,this.state.delay);\r\n                this.btnEnable();\r\n                break;\r\n            case \"Quick Sort\":\r\n                console.log(\"Quick Sort\");\r\n                var endd = this.state.array.length-1;\r\n                await quickSort(this.state.array,0,endd,this.state.delay);\r\n                this.btnEnable();\r\n                break;\r\n            case \"Selection Sort\":\r\n                console.log(\"Selection Sort\");\r\n                await selectionSort(this.state.array,this.state.delay);\r\n                this.btnEnable();\r\n                break;\r\n            case \"Insertion Sort\":\r\n                console.log(\"Insertion Sort\");\r\n                await insertionSort(this.state.array,this.state.delay);\r\n                this.btnEnable();\r\n                break;\r\n            case \"Radix Sort\":\r\n                console.log(\"Radix Sort\");\r\n                await radixSort(this.state.array,this.state.delay);\r\n                this.btnEnable();\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n    }\r\n\r\n    getInfo = (event) => {\r\n        event.preventDefault();\r\n        this.props.setInfo();\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                 <h2>{this.props.algorithm} <button type=\"submit\" id=\"info\" className=\"btn btn-dark mb-2 mybtn\" onClick={e => this.getInfo(e)}>Info</button></h2>\r\n                {\r\n                     this.props.info \r\n                     ? (<Info algorithm= {this.props.algorithm} /> )\r\n                     :(\r\n                        <div>\r\n                        <div>\r\n                        <form className=\"form-inline\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <label htmlFor=\"arraySize\" className=\"size-label\"> Array Size : </label>\r\n                                <input type=\"text\"  className=\"form-control\" id=\"arraySize\" onChange={e => this.onInputChange(e)} placeholder={this.state.size}/>\r\n                            </div>\r\n                            <button type=\"submit\" id=\"select\" className=\"btn btn-dark mb-2 mybtn\" onClick={e => this.setArraySize(e)}>Select</button>\r\n                            <button type=\"submit\" id=\"reset\" className=\"btn btn-dark mb-2 mybtn\" onClick={e => this.setArraySize(e)}>Reset Array</button>\r\n                            <button type=\"submit\" id=\"start\" className=\"btn btn-dark mb-2 mybtn\" onClick={e => this.startAlgorithm(e)}>Start</button>\r\n                            <div className=\"slider-container\">\r\n                               <span>Slow</span>\r\n                                    <input type=\"range\" min=\"3\" max=\"300\" slider-step=\"50\" className=\"form-control\" id=\"delay\" onChange={e => this.onSliderChange(e)} value={(303-this.state.delay)}/>\r\n                                <span>Fast</span>\r\n                            </div>\r\n                        </form>\r\n                        </div>\r\n                        <RenderArray array={this.state.array}/>\r\n                        </div>\r\n                        )\r\n                }   \r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    }\r\n\r\n   \r\n\r\n    export default Visualizer;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n    <div>\r\n        <div className=\"jumbotron\">\r\n                    <h1 className=\"display-4\">Visual Sort</h1>\r\n                    <p className=\"lead\"> A Simple Visualizer For Sorting Algorithms.</p>\r\n                    <hr className=\"my-4\"/>\r\n                    <p>\r\n                        It provides a simple step by step representation of different sorting algorithms .\r\n                        <br/>\r\n                        It helps in understanding how different sorting algorithms work.\r\n                    </p>\r\n\r\n                    <div>\r\n                        <div className=\"float-right\">\r\n                            Created By Shubham Vasnik\r\n                        </div>\r\n                    </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default About;","import './stylesheets/app.css'\r\nimport React from 'react';\r\nimport NavBar from './NavBar';\r\nimport Visualizer from './Visualizer';\r\nimport About from './About';\r\n\r\n\r\nclass App extends React.Component{\r\n    state = {algorithm:'Merge Sort',info:false};\r\n    setAlgorithm = (selectedAlgorithm) => {\r\n        this.setState({algorithm:selectedAlgorithm});\r\n    }\r\n\r\n    setInfo = () => {\r\n        this.setState({info:true});\r\n    }\r\n\r\n    reserInfo = () => {\r\n        this.setState({info:false});\r\n    }\r\n\r\n    if(){\r\n        \r\n    }\r\n    render(){\r\n        return (\r\n        <div>\r\n            <NavBar setAlgorithm={this.setAlgorithm} resetInfo={this.reserInfo}/>\r\n            {\r\n                this.state.algorithm === \"Visual Sort\" \r\n                ? <About/>\r\n                :(\r\n                    <div className=\"container\">\r\n                        <Visualizer algorithm={this.state.algorithm} setInfo={this.setInfo} info={this.state.info}/>\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n            \r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\n\r\n\r\n\r\nReactDOM.render(<App/>,document.querySelector(\"#root\"));"],"sourceRoot":""}